{"version":3,"sources":["asset/json/cm.js","router/index.js","page/list.js","App.js","serviceWorker.js","index.js"],"names":["cmSingleCheckList","routes","path","component","state","datalist","inputText","this","setState","temp","map","item","indexOf","console","log","push","length","Paper","IconButton","aria-label","InputBase","placeholder","inputProps","margin","value","onChange","event","target","Button","variant","color","onClick","search","clear","List","index","re","RegExp","replace","ListItem","button","dangerouslySetInnerHTML","__html","Divider","Component","App","route","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"qRAmFeA,EAnFS,CACtB,kPACA,+JACA,qJACA,4NACA,0NACA,wJACA,8KACA,mIACA,2HACA,kJACA,qOACA,+NACA,4KACA,0IACA,uLACF,gIACA,uLACA,wPACA,kJACA,kVACA,2KACA,gSACA,2KACA,8HACA,wQACA,8NACA,8KACA,2PACA,qRACA,kKACA,6MACA,8MACA,mSACA,6PACA,qNACA,8PACA,0OACA,+LACA,6SACA,sOACA,4RACA,uIACA,+ZACA,mNACA,2pBACA,8vBACA,qLACA,0ZACA,+bACA,8KACA,mLACA,uTACA,kzBACA,oZACA,mTACA,0rBACA,8KACA,8KACA,8OACA,mOACA,6NACA,6KACA,mNACA,+UACA,uNACA,uJACA,mMACA,kMACA,6KACA,iKACA,6NACA,yOACA,6KACA,sLACA,0RACA,qSACA,qJACA,mOACA,mOACA,qR,iDCtEeC,EAPA,CACb,CACEC,KAAM,IACNC,U,4MCYFC,MAAQ,CACNC,SAAU,GACVC,UAAW,I,kEAGXC,KAAKC,SAAS,CACZH,SAAUL,M,+BAGJ,IAAD,OACHS,EAAO,GACXT,EAAkBU,KAAI,SAAAC,GAChBA,EAAKC,QAAQ,EAAKR,MAAME,YAAc,IACxCO,QAAQC,IAAIH,GACZF,EAAKM,KAAKJ,OAGdJ,KAAKC,SAAS,CACZH,SAAUI,IAEuB,GAA/BF,KAAKH,MAAME,UAAUU,QACvBT,KAAKC,SAAS,CACZH,SAAUL,M,8BAKdO,KAAKC,SAAS,CACZF,UAAW,GACXD,SAAUL,M,+BAIJ,IAAD,OACP,OACE,6BACE,kBAACiB,EAAA,EAAD,CAAOd,UAAU,QACf,kBAACe,EAAA,EAAD,CAAYC,aAAW,QACrB,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACEC,YAAY,qBACZC,WAAY,CAAE,aAAc,sBAE5BC,OAAO,QACPC,MAAOjB,KAAKH,MAAME,UAClBmB,SAAU,SAAAC,GACRb,QAAQC,IAAIY,EAAMC,OAAOH,OACzB,EAAKhB,SAAS,CACZF,UAAWoB,EAAMC,OAAOH,WAI9B,kBAACI,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAAS,WACP,EAAKC,WAJT,gBAjBF,WA2BE,kBAACJ,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAAS,WACP,EAAKE,UAJT,iBAUF,kBAACC,EAAA,EAAD,CAAM/B,UAAU,MAAMgB,aAAW,6BAC9BZ,KAAKH,MAAMC,SAASK,KAAI,SAACC,EAAMwB,GAC9B,IAAIC,EAAK,IAAIC,OAAO,EAAKjC,MAAME,UAAW,KAK1C,OAJAK,EAAOA,EAAK2B,QACVF,EADK,kCAEsB,EAAKhC,MAAME,UAFjC,YAKL,6BACE,kBAACiC,EAAA,EAAD,CAAUC,QAAM,GACd,yBACEC,wBAAyB,CACvBC,OAAO,QAAD,OAAUP,EAAQ,EAAlB,aAAwBxB,EAAxB,cAIZ,kBAACgC,EAAA,EAAD,gB,GA1FIC,eCyBLC,MArCf,WACE,OACE,kBAAC,IAAD,KACG5C,EAAOS,KAAI,SAAAoC,GAAK,OACf,kBAAC,IAAUA,QCGCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCNNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlD,QAAQkD,MAAMA,EAAMC,c","file":"static/js/main.24840ff0.chunk.js","sourcesContent":["let cmSingleCheckList = [\n  '挡煤板的作用是防止采煤机割下的煤(C)A.落到输送机上B.落到输送机内侧C.落到输送机外侧D.伤人',\n  '采煤工作面煤层被直接采出的厚度叫(D)A.煤柱B.煤帮C. 煤壁D.采高',\n  '直接进行采掘的煤层暴露面叫( C )A.煤柱B.煤帮C. 煤壁D.工作面',\n  '采高较大或煤层节理发育，煤壁易(B) 可能导致顶板大量下沉。A.冒落B.片帮C. 跨落D.压垮',\n  '在普采工作面内破煤和装煤两个工序 全部由（C）A.转载机B.三机C. 采煤机来完成D.工人',\n  '采煤工作面的支护包含两个方面的意义(C)A.护B.支C.支和护D.放',\n  '断 层 分 为 (c)逆断层、平移断层。A.大断层B.小断层C.正断层D.平移断层',\n  '位于煤层(A)的岩层叫顶板。A.上面B .下面C .中部D .地下',\n  '位于煤层下面的岩层叫( B )A顶板B.底板C.老顶D.伪顶',\n  '煤层顶板分为(A )直接顶和基本顶。A伪顶B.假顶C.软顶D.再造',\n  '基本顶周期性垮落的距离，称为基本顶(A )A周期来压步距 B .初次来压C .老顶来压 D .初次来压',\n  '完成一个循环，采煤工作面向前推进 的距离称(A)A方循环进度 B .班进度C .日进度 D .月进度',\n  '进刀方式分为中部进刀( A )A.端部进刀B.中间割煤C.联合进刀D.底部进刀',\n  '液压支架梁端距—般底应部不进超刀过(A)A.840mmB.400mmC. 450mmD. 300mm',\n  '综采工作面采高应不小于支架的（C）支护高度.A.一样 B.最大 C最小 D.平均',\n'矿尘分为煤尘和（A）两种A 岩尘 B.粉尘 C颗粒 D.灰尘',\n'综采工作面完成一个循环的标志是（B）A.支护 B移架 顶溜 C.扫浮煤 D.拉架',\n'油液内部或油液与容器接触面之间的单位面积的作用力称为（A）A压力 B.压强 C.作用力 D.反作用力',\n'泵站是采煤机调高系统的（B）A.心脏 B动力源 C.原件 D.设备',\n'根据控制阀在液压系统中所起的作用不同，可分为（A）压力控制阀和流量控制阀三大类A方向控制阀 B.大小控制阀 C.节流阀 D.控制阀',\n'溢流阀可分力直动式和（A）两种.A先导式 B.滞后式 C.回路式 D.同步式',\n'综采工作面有两种（A）A左工作面和右工作面 B上工作面和下工作面 C.前工作面和后工作面D.前工作面和后工作面',\n'采区变电所应用（C）支护.A.工字钢 B.可燃性材料 C不燃性材料 D.石材',\n'液控单向阀属于（B）原件.A.动力B控制C.执行D.辅助',\n'在综采工作面中，刮板输送机起承载（A）和采煤机导向以及液压支架推移作用.A运煤B.拉煤C.割煤D.落煤',\n'回采工艺是指按照一定（B）完成各项回采工序的方法及其配合.A.工序B顺序C.次序D.时间',\n'回采工艺由破煤.装煤.运煤.支护.采空区处理（A）个工序组成.A.5 B.4 C.3 D.7',\n'给采煤工作面支护设备及推移装置供液的液压动力（A）称作乳化液泵站.A没设备B.设施C工具D.装置',\n'利用液体压力产生工作阻力，并实现升柱和卸载的单根（B）支柱称单体液压支柱.A.弹性 B可缩性C.工具D.扳手',\n'单向阀是指仅允许液体（B）流动的阀件.A.多向B单向C.安全D.全面',\n'液压传动系统由（A）、执行机构和控制装置组成.A动力机构B.可缩性 C工具 D.安全',\n'减液压冲击的根本措施是避免液体速度的（C）A.稳定 B.减小 C突然变化 D.静止不动',\n'上区段工作面采完后，沿着上区段采空区边缘开掘下区段的回风平巷叫做（A）. A沿空送巷B.沿空留巷 C.平巷 D.煤巷',\n'根据岩性.厚度及采煤过程中垮落的难易程度顶板分为伪顶、直接顶、（C）A.老底B.隧道 C老顶D.煤层',\n'我国长壁式采煤工作面采用（A）、普采和综采三种回采工艺.A炮采B机采C洞室D小采',\n'乳化液是一种由（C）配置而成水包油型的乳白色液体A.水 B.油 C少量乳化油和大量的水 D.少量乳化油',\n'安全阀是指能保持支柱（A）的特性，并保护其不致超载损坏的阀件.A恒阻B.一样C.压力D.额定',\n'金属铰接顶梁与木梁比不易损坏而且还能（A）使用A多次B.一次C.辆次D.二次',\n'倾斜长壁采煤法中，采煤工作面沿煤层倾斜方向自下而上推进的开采叫做（A）A仰斜开采B.俯斜开采 C.伪斜 D.水平开采',\n'将高压液体注入外注式单体液压支柱用以升柱的工具称（A）A注液抢 B.手把 C.安全阀 D.阀门',\n'液压支架按其对顶板的支护方式和结构特点的不同，可分为支撑式.掩护式.支撑掩护式（B）种基本架型A.2 B3 C.4 D.6',\n'回柱放顶时，（A）单人操作.A可 B.不可 C.无所谓 D.三人',\n'随着上区段工作面采完后，用专门的支护材料，在采空区维护将上区段运输平巷作为下区段采煤工作面的回风平巷称为（A）A沿空留巷B.沿空送巷 C.落山巷 D.采煤',\n'回柱放顶之后放顶线到工作面煤壁的距离就叫（A）控顶距.A.最小B.最大C.一样D.平均',\n'在矿山压力的作用下引起一系列的自然现象，例如煤层顶板下沉和震荡.底板鼓起.片帮.支架变形和损坏.充填物下沉压缩.煤岩层和地表移动.路边矿边坡滑动.冲击地压.煤与瓦斯突出等，这一系列现象称为（A）A矿山压力显现B.应力集中显现C.岩石压力显现D.引力',\n'当老顶悬露达到极限跨距时，老顶断裂，同时发生已破断的岩块回转失稳变形失稳，有时可能伴随没落失稳煤层顶板的台阶下沉，从而导致采煤工作煤层顶板的急剧下沉，此时，采煤工作面支架呈现的受力普遍加大，即称为（C）A.直接顶有初次来压B.伪顶的初次来压C老顶的初次来压D正常来压',\n'煤层一旦有片帮，应掏梁窜（B）支护防止冒顶.A.滞后B.超前C.加强D.立即',\n'掘进面电气设备的“两闭锁”是指（B）A.通风与瓦斯的闭锁掘进机与运输机的闭锁B.风电闭锁.瓦斯电闭锁C.风电闭锁.掘进机与运输机的闭锁D.通风与瓦斯的闭锁',\n'刮板输送机，破碎机，转载机正确的开启顺序为（A）A破碎机--—转载机--刮板输送机B破碎机--刮板输送机-—转载机C.刮板输送机-—破碎机-一转载机D.煤机-刮板输送机-—转载机',\n'采煤工作面的空间直接维护的对象是（B）A.顶板B.直接顶C.落山D.底板',\n'采煤工作面煤壁到支架梁端为（A）A端面距B.空顶距C.支护D.最大空顶距',\n'矿井灾害预防和处理计划是指为了灾害的发生和一旦发生事故后，预先制定的抢险救灾（B）A.安全投入B方案C.财产D.方法',\n'（A）就是利用钢钎等工具去敲击工作面帮顶已暴露的而未加管理的煤体，利用发出的回音来探明周围煤体是否松动.断裂或离层.如果声音清脆说明所敲击部位的煤体没有脱离母体，顶板不会冒落，煤壁不会片帮，如果发出空声说明所敲击部位的煤体已脱离母体，很可能发生冒顶和片帮.A敲帮问顶B.支护C.支架D.放顶',\n'（A）的主要内容是采场支护和采空区处理.目前采空区处理方法大致分为四种：垮落法、煤柱支撑法、缓慢下沉法和充填法.A.顶板管理B.设备管理C.财产D.作业',\n'（A）是刮板输送机的连接.保护装置，起着过载保护作用，也有均载和减缓冲击的作用.A液力偶合器B.对轮C.销子D.蛤蟆扣',\n'巷道报废后，由于受采动影响，支架产生严重变形，断梁折柱.空帮.空顶，顶板破碎极易冒顶，另外在报废的巷道内已停止通风，积聚了大量的瓦斯和有害气体，还可能积聚大量的积水如果（A）不及时，一旦人员进入旧巷，会发生各种伤亡事故.A封闭B.支护C.支架D.循环',\n'煤层顶板暴露的面积（A）煤层顶板压力越大.A越大B.越小C.落山D.一样',\n'巷道交岔点（C）通常认为煤层顶板压力越大.A.越大B.越少C越多D.一样',\n'迅速恢复冒顶区的（A）如一时不能恢复，可采取其它措施.A在常通风B循环风C微风D.串联通风',\n'采煤工作面爆破时，必须有保护支架和其它设备的（B）A.工作设施B安全设施C.支护D.设备',\n'作面后方采空区是（B）工作面前方煤壁内是处于增压区A.稳压区B常压区C.支架D.减压区',\n'刮板输送机（C）维护管理要做到三平两直.一稳.四勤A.月B年C日常D旬',\n'小绞车应安装在通风良好.顶板完整支护可靠的（A）地点A.安全B.不安全C.支架D.任意',\n'以下不属于乳化液泵箱体温升过快或油温过高原因的是（D）A.连杆轴瓦损坏及曲轴颈磨损B.润滑油不足C.润滑油过多D滑块密封损坏',\n'采煤工作面必须按作业规程的规定及时支护，严禁（A）A空顶作业B.支护C.中等D.同时',\n'采煤机牵引部由（B）提供动力.A.电动机 B马达C.行走轮D.主泵',\n'液压马达将主油泵提供的液压能转变为（B）A电能、B气械能C.转动能D液压能',\n'截割部由固定减速箱，摇臂和（A）等部件组成.A. 滚筒B.星型头C.行走轮D.刀齿',\n'采煤机高压回路压力大小决定于（B）A.摩擦力B牵引阻力C.动量D.马达',\n'采煤机低压保护又称为（B）A.无压保护B主保护C.失压保护D.液压',\n'闭式液压系统中，主油泵与马达是通过油（A）A直接连动B.间接联动C.没关系D.互相联系',\n'过零保护系统是为了防止采煤机停止牵引时出现（B）而设计的A.正转B反转C.静止不动D.匀速',\n'滚筒宽度即采煤机的（B）A.循环进度B理论截深C.设计宽度D.滚筒直径',\n'采煤机所用截齿有（A）型截齿和稿型截齿两种.A刀型、B.一字型C.Y型D.M型',\n'采煤机按牵引方式，分为液压牵引采煤机，（A）两种.A电牵引采煤机B.马达牵引采煤机C.动力牵引采煤机D.其它',\n'牵引系统由液压传动改为直流电动机驱动或特殊电动机驱动，可以大大提高（B）A.牵引速度B传动效率C.功率D.电阻',\n'电牵引采煤机左右截割部相互（A）A独立B.分离.C一体D.联系',\n'电牵引采煤机液压系统包括：调高回路、（B）两部分.A.液压回路B制动回路C电回路D.独立',\n'电牵引采煤机构有制动回路能够为采煤机提供（A）A伤滑保护B.过电流保护C.过电压D.动力',\n'在工作过程中，粗过滤器一但滤芯被污物堵塞，压差通过（C）可显示出来.A.高压表B.低压表C真空表D.压力表',\n];\n\nexport default cmSingleCheckList;\n","\nimport tList from '../page/list';\n\nconst routes = [\n  {\n    path: \"/\",\n    component: tList,\n  }\n];\n\nexport default routes;","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport cmSingleCheckList from '../asset/json/cm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nclass tList extends Component {\n  state = {\n    datalist: [],\n    inputText: ''\n  };\n  componentDidMount() {\n    this.setState({\n      datalist: cmSingleCheckList\n    });\n  }\n  search() {\n    var temp = [];\n    cmSingleCheckList.map(item => {\n      if (item.indexOf(this.state.inputText) > -1) {\n        console.log(item);\n        temp.push(item);\n      }\n    });\n    this.setState({\n      datalist: temp\n    });\n    if (this.state.inputText.length == 0) {\n      this.setState({\n        datalist: cmSingleCheckList\n      });\n    }\n  }\n  clear() {\n    this.setState({\n      inputText: '',\n      datalist: cmSingleCheckList\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Paper component=\"form\">\n          <IconButton aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <InputBase\n            placeholder=\"搜题啦\"\n            inputProps={{ 'aria-label': '搜题啦' }}\n            // fullWidth=\"true\"\n            margin=\"dense\"\n            value={this.state.inputText}\n            onChange={event => {\n              console.log(event.target.value);\n              this.setState({\n                inputText: event.target.value\n              });\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              this.search();\n            }}\n          >\n            搜索\n          </Button>\n          &nbsp;&nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              this.clear();\n            }}\n          >\n            清空\n          </Button>\n        </Paper>\n        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n          {this.state.datalist.map((item, index) => {\n            var re = new RegExp(this.state.inputText, 'g');\n            item = item.replace(\n              re,\n              `<span style=\"color:red\">${this.state.inputText}</span>`\n            );\n            return (\n              <div>\n                <ListItem button>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: `<div>${index + 1}. ${item}</div>`\n                    }}\n                  />\n                </ListItem>\n                <Divider />\n              </div>\n            );\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default tList;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport routes from '../src/router/index'\n\nfunction App() {\n  return (\n    <Switch>\n      {routes.map(route => (\n        <Route {...route} />\n      ))}\n      {/* <Switch> */}\n      {/* If the current URL is /about, this route is rendered\n          while the rest are ignored */}\n      {/* <Route path=\"/\">\n          <List />\n        </Route> */}\n\n      {/* Note how these two routes are ordered. The more specific\n          path=\"/contact/:id\" comes before path=\"/contact\" so that\n          route will render when viewing an individual contact */}\n      {/* <Route path=\"/contact/:id\">\n          <Contact />\n        </Route>\n        <Route path=\"/contact\">\n          <AllContacts />\n        </Route> */}\n\n      {/* If none of the previous routes render anything,\n          this route acts as a fallback.\n\n          Important: A route with path=\"/\" will *always* match\n          the URL because all URLs begin with a /. So that's\n          why we put this one last of all */}\n      {/* <Route path=\"/\">\n          <Home />\n        </Route> */}\n      {/* </Switch> */}\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   // Route,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}